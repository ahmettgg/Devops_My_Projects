apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-production-pv-vol
  namespace: production
  labels:
    tier: production
    app: mysql
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-production-pv-claim
  namespace: production
  labels:
    tier: production
    app: mysql
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: production
  labels:
    tier: production
    app: mysql
spec:
  selector:
    matchLabels:
      tier: production
      app: mysql

  template:
    metadata:
      labels:
        tier: production
        app: mysql
    spec:
      volumes:
        - name: mysql-pv-storage-pr
          persistentVolumeClaim:
            claimName: "mysql-production-pv-claim"
      containers:
        - name: mysql-prod
          image: mysql:5.6
          envFrom:
            - secretRef:
                name: mysql-pr-secret
          resources:
            limits:
              memory: "1Gi"
              cpu: "250m"
          ports:
            - containerPort: 3306
              name: mysql-prod-port
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-pv-storage-pr

      nodeSelector:
        tier: production
      tolerations:
        - key: "tier"
          operator: "Equal"
          value: "production"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-prod-svc
  namespace: production
  labels:
    tier: production
spec:
  selector:
    tier: production
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-deploy-pr
  namespace: production
  labels:
    tier: production
    app: wordpress
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: production
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tier: production
        app: wordpress
    spec:
      containers:
        - name: wordpress-cotainer-pr
          image: wordpress:5.6
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.1"
              memory: "256Mi"
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql-prod-svc
          envFrom:
            # - configMapRef:
            #     name: prod-config
            - secretRef:
                name: prod-secret
      nodeSelector:
        tier: production
      tolerations:
        - key: "tier"
          operator: "Equal"
          value: "production"
          effect: "NoSchedule"
---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: prod-config
#   namespace: production
# data:
#   WORDPRESS_DB_HOST: mysql-prod-svc

---
apiVersion: v1
kind: Secret
metadata:
  name: prod-secret
  namespace: production
type: Opaque
data:
  WORDPRESS_DB_USER: bXlzcWx3cGFkbWlu
  WORDPRESS_DB_PASSWORD: UEBzc3cwcmQxIQ==
  WORDPRESS_DB_NAME: d29yZHByZXNzZGI=
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-pr-secret
  namespace: production
type: Opaque
data:
  MYSQL_USER: bXlzcWx3cGFkbWlu
  MYSQL_PASSWORD: UEBzc3cwcmQxIQ==
  MYSQL_DATABASE: d29yZHByZXNzZGI=
  MYSQL_ROOT_PASSWORD: UEBzc3cwcmQxIQ==

---
apiVersion: v1
kind: Service
metadata:
  name: wp-prod-svc
  namespace: production
  labels:
    tier: production
    app: wordpress
spec:
  selector:
    tier: production
    app: wordpress
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30002
  type: NodePort
